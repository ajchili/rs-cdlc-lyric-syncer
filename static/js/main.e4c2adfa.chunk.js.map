{"version":3,"sources":["components/AudioSourceSelector.jsx","components/Header.jsx","components/PlayerButton.jsx","components/Player.jsx","App.jsx","index.jsx"],"names":["props","audioInputValueChanged","setMedia","file","audioInput","current","files","url","URL","createObjectURL","name","type","selectAudioSource","click","React","createRef","className","onClick","this","accept","ref","onChange","hidden","Component","text","title","e","AudioContext","window","webkitAudioContext","initializePeaks","media","setState","instance","audio","setAttribute","load","audioContext","options","containers","overview","document","getElementById","zoomview","emitCueEvents","mediaElement","webAudio","scale","multiChannel","keyboard","showPlayheadTime","zoomLevels","Peaks","init","err","console","error","message","log","on","point","isLyric","color","currentLyric","labelText","editLyric","querySelector","onchange","changeVolume","addEventListeners","onkeydown","handleKeyDown","download","artist","fileData","fileName","blob","Blob","element","createElement","style","display","body","appendChild","removeChild","export","state","prompt","trim","length","bpm","parseInt","points","getPoints","sort","a","b","time","gap","timeToQuarterBeats","textContent","Math","floor","map","i","isEndMarker","pos","normalizedPos","max","normalizedLength","nextPointPos","normalizedNextPointPos","lyric","slice","substr","filter","line","join","code","toLowerCase","togglePaused","addLyric","addEndOfLyric","addEndOfVerse","wasPaused","paused","player","pause","add","getCurrentTime","editable","play","confirm","removeById","id","update","volume","parseFloat","value","playButtonText","zoomIn","zoom","zoomOut","uk-spinner","data-action","defaultValue","min","step","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e4c2adfa.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.audioInput = React.createRef();\n  }\n\n  audioInputValueChanged = () => {\n    const { setMedia } = this.props;\n    if (setMedia) {\n      const file = this.audioInput.current.files[0];\n      const url = URL.createObjectURL(file);\n      setMedia(file.name, file.type, url);\n    }\n  };\n\n  selectAudioSource = () => {\n    this.audioInput.current.click();\n  };\n\n  render() {\n    return (\n      <div>\n        <button\n          className=\"uk-button uk-button-default uk-button-small\"\n          onClick={this.selectAudioSource}\n        >\n          Select Audio Source\n        </button>\n        <input\n          type=\"file\"\n          accept=\"audio/*\"\n          ref={this.audioInput}\n          onChange={this.audioInputValueChanged}\n          hidden\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class extends Component {\n  render() {\n    return (\n      <div className=\"uk-margin-top\">\n        <h1 className=\"uk-heading-line uk-text-center\">\n          <span>Better UltraStar Creator</span>\n        </h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class extends Component {\n  render() {\n    const {\n      type = 'default',\n      onClick = () => {},\n      text,\n      title = null,\n    } = this.props;\n\n    return (\n      <button\n        className={`uk-button uk-button-${type} uk-button-small`}\n        onClick={(e) => {\n          if (onClick) {\n            onClick(e);\n          }\n        }}\n        title={title}\n      >\n        {text}\n      </button>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Peaks from 'peaks.js';\nimport PlayerButton from './PlayerButton';\n\n// Workaround for AudioContext.\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      instance: null,\n      currentLyric: null,\n      playButtonText: 'Play',\n    };\n    this.audio = React.createRef();\n  }\n\n  componentDidMount() {\n    this.initializePeaks();\n    this.addEventListeners();\n  }\n\n  initializePeaks = () => {\n    const { media } = this.props;\n    this.setState({ instance: null });\n    this.audio.current.setAttribute('src', media.url);\n    this.audio.current.setAttribute('type', media.type);\n    this.audio.current.load();\n    const audioContext = new AudioContext();\n    const options = {\n      containers: {\n        overview: document.getElementById('overview-container'),\n        zoomview: document.getElementById('zoomview-container'),\n      },\n      emitCueEvents: true,\n      mediaElement: this.audio.current,\n      webAudio: {\n        audioContext: audioContext,\n        scale: 64,\n        multiChannel: true,\n      },\n      keyboard: true,\n      showPlayheadTime: true,\n      zoomLevels: [64, 128, 256, 512, 1024, 2048, 4096, 8192],\n    };\n    Peaks.init(options, (err, instance) => {\n      this.setState({ instance });\n      if (err) {\n        console.error(err.message);\n        return;\n      }\n\n      console.log('Peak instance initialized.');\n\n      instance.on('points.enter', (point) => {\n        const isLyric = point.color === '#666';\n        this.setState({ currentLyric: isLyric ? point.labelText : null });\n      });\n\n      instance.on('points.dblclick', this.editLyric);\n\n      document.querySelector(\n        'input[data-action=\"change-volume\"]'\n      ).onchange = this.changeVolume;\n    });\n  };\n\n  addEventListeners = () => {\n    document.onkeydown = this.handleKeyDown;\n  };\n\n  download = (name, artist, fileData) => {\n    const fileName = `${artist} - ${name} lyrics.txt`;\n    const blob = new Blob([fileData], { type: 'data:text/plain;' });\n    const url = URL.createObjectURL(blob);\n    const element = document.createElement('a');\n    element.setAttribute('href', url);\n    element.setAttribute('download', fileName);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  };\n\n  export = () => {\n    const { media } = this.props;\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const title = prompt('Song title', media.title);\n    if (title === null || title.trim().length === 0) {\n      return;\n    }\n    const artist = prompt('Artist', '');\n    if (artist === null || artist.trim().length === 0) {\n      return;\n    }\n    let bpm = prompt('BPM', '100');\n    if (bpm === null || bpm.trim().length === 0) {\n      return;\n    }\n    bpm = parseInt(bpm, 10);\n    const points = instance.points.getPoints().sort((a, b) => a.time - b.time);\n    const gap = (points.length > 0 ? points[0].time : 0) * 1000;\n    const timeToQuarterBeats = (bpm / 15000);\n    const textContent = [\n      `#TITLE:${title}`,\n      `#ARTIST:${artist}`,\n      `#BPM:${bpm}`,\n      `#GAP:${Math.floor(gap)}`,\n      ...points.map((point, i) => {\n        if (point.color === '#0000FF') {\n          return null;\n        }\n        const isEndMarker = point.color === '#FF0000';\n        const pos = point.time * 1000;\n        const normalizedPos = Math.floor((pos - gap) * timeToQuarterBeats);\n        if (isEndMarker) {\n          if (i > 0) {\n            return `- ${Math.max(normalizedPos + 1, normalizedPos)}`;\n          } else {\n            return `- ${normalizedPos}`;\n          }\n        }\n        let normalizedLength = 1;\n        if (i + 1 < points.length) {\n          const nextPoint = points[i + 1];\n          const nextPointPos = nextPoint.time * 1000;\n          const normalizedNextPointPos = Math.floor(\n            (nextPointPos - gap) * timeToQuarterBeats\n          );\n          normalizedLength = Math.max(\n            1,\n            normalizedNextPointPos - normalizedPos\n          );\n        }\n        let lyric = point.labelText;\n        if (lyric.slice(-1) === '-') {\n          lyric = lyric.substr(0, lyric.length - 1);\n        }\n        if (\n          // Is not the start of a verse\n          (i > 0 && points[i - 1].color === '#FF0000') ||\n          // Previous lyric is not a syllable\n          (i > 0 && points[i - 1].labelText.slice(-1) !== '-')\n        ) {\n          return `: ${normalizedPos} ${normalizedLength} 0  ${lyric}`;\n        }\n        return `: ${normalizedPos} ${normalizedLength} 0 ${lyric}`;\n      }),\n      'E',\n    ].filter((line) => line !== null);\n    this.download(title, artist, textContent.join('\\n'));\n  };\n\n  handleKeyDown = (e) => {\n    switch (e.code.toLowerCase()) {\n      // Play/Pause on space pressed\n      case 'space':\n        this.togglePaused();\n        break;\n      case 'keyh':\n        this.addLyric();\n        break;\n      case 'keyj':\n        this.addEndOfLyric();\n        break;\n      case 'keyk':\n        this.addEndOfVerse();\n        break;\n      default:\n        console.log(e);\n        break;\n    }\n  };\n\n  addLyric = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const wasPaused = this.audio.current.paused;\n    instance.player.pause();\n    const lyric = prompt('Please provide a lyric', '');\n    if (lyric === null || lyric.trim().length === 0) {\n      if (!wasPaused) instance.player.play();\n      return;\n    }\n    instance.points.add({\n      time: instance.player.getCurrentTime(),\n      labelText: lyric,\n      editable: true,\n      color: '#666',\n    });\n    if (!wasPaused) instance.player.play();\n  };\n\n  editLyric = (point) => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const isEndMarker = point.color !== '#666';\n    if (isEndMarker) {\n      if (window.confirm('Do you want to delete this end marker?')) {\n        instance.points.removeById(point.id);\n      }\n      return;\n    }\n    const lyric = prompt(\n      'Update lyric, leave blank to remove',\n      point.labelText\n    );\n    if (lyric === null || lyric.trim().length === 0) {\n      instance.points.removeById(point.id);\n      return;\n    }\n    point.update({\n      labelText: lyric,\n    });\n  };\n\n  addEndOfLyric = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const wasPaused = this.audio.current.paused;\n    instance.player.pause();\n    instance.points.add({\n      time: instance.player.getCurrentTime(),\n      labelText: '(end of lyric)',\n      editable: true,\n      color: '#0000FF',\n    });\n    if (!wasPaused) instance.player.play();\n  };\n\n  addEndOfVerse = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const wasPaused = this.audio.current.paused;\n    instance.player.pause();\n    instance.points.add({\n      time: instance.player.getCurrentTime(),\n      labelText: '(end of verse)',\n      editable: true,\n      color: '#FF0000',\n    });\n    if (!wasPaused) instance.player.play();\n  };\n\n  changeVolume = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const volume =\n      parseFloat(\n        document.querySelector('input[data-action=\"change-volume\"]').value\n      ) || 0;\n    this.audio.current.volume = volume;\n  };\n\n  togglePaused = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const wasPaused = this.audio.current.paused;\n    this.setState({\n      currentLyric: null,\n      playButtonText: wasPaused ? 'Pause' : 'Play',\n    });\n    if (wasPaused) {\n      instance.player.play();\n    } else {\n      instance.player.pause();\n    }\n  };\n\n  zoomIn = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    instance.zoom.zoomIn();\n  };\n\n  zoomOut = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    instance.zoom.zoomOut();\n  };\n\n  render() {\n    const { media } = this.props;\n    const { instance, currentLyric, playButtonText } = this.state;\n\n    return (\n      <div className=\"uk-card uk-card-default uk-card-body uk-margin-top\">\n        <h3 className=\"uk-card-title\">{media.title}</h3>\n        <h4 className=\"uk-heading-bullet\">\n          <span>{currentLyric}</span>\n        </h4>\n        <div id=\"peaks-container\">\n          <div id=\"zoomview-container\"></div>\n          <div id=\"overview-container\"></div>\n        </div>\n        {instance === null ? (\n          <dl className=\"uk-description-list\">\n            <dt>Processing song data...</dt>\n            <dd>Please wait as \"{media.title}\" is processed...</dd>\n            <br />\n            <div uk-spinner=\"ratio: 1\"></div>\n          </dl>\n        ) : (\n          <>\n            <div className=\"uk-form-stacked\">\n              <div className=\"uk-margin-top\">\n                <label className=\"uk-form-label\">Controls</label>\n                <div className=\"uk-button-group\">\n                  <PlayerButton\n                    onClick={this.togglePaused}\n                    text={playButtonText}\n                    title=\"(SPACE)\"\n                  />\n                  <PlayerButton onClick={this.zoomIn} text=\"Zoom in\" />\n                  <PlayerButton onClick={this.zoomOut} text=\"Zoom out\" />\n                  <PlayerButton\n                    onClick={this.addLyric}\n                    text=\"Add lyric at current time\"\n                    title=\"(H)\"\n                  />\n                  <PlayerButton\n                    onClick={this.addEndOfLyric}\n                    text=\"End lyric at current time\"\n                    title=\"(J)\"\n                  />\n                  <PlayerButton\n                    onClick={this.addEndOfVerse}\n                    text=\"End verse at current time\"\n                    title=\"(K)\"\n                  />\n                </div>\n              </div>\n              <div className=\"uk-margin-top\">\n                <label className=\"uk-form-label\">Volume</label>\n                <div className=\"uk-form-controls\">\n                  <input\n                    className=\"uk-range\"\n                    data-action=\"change-volume\"\n                    type=\"range\"\n                    defaultValue=\"1\"\n                    min=\"0\"\n                    max=\"1\"\n                    step=\"0.01\"\n                  />\n                </div>\n              </div>\n              <div className=\"uk-margin-top\">\n                <PlayerButton\n                  onClick={this.export}\n                  text=\"Export\"\n                  type=\"primary\"\n                />\n              </div>\n            </div>\n          </>\n        )}\n        <audio ref={this.audio} hidden></audio>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport AudioSourceSelector from './components/AudioSourceSelector';\nimport Header from './components/Header';\nimport Player from './components/Player';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      media: null,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ media: null });\n  }\n\n  setMedia = (title, type, url) => {\n    this.setState({ media: null }, () => {\n      this.setState({ media: { title, type, url } });\n    });\n  };\n\n  render() {\n    const { media } = this.state;\n\n    return (\n      <div className=\"uk-container\">\n        <Header />\n        <AudioSourceSelector setMedia={this.setMedia} />\n        {media !== null && <Player media={media} />}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}