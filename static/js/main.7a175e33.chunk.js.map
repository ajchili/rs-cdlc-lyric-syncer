{"version":3,"sources":["components/AudioSourceSelector.jsx","components/HelpModal.jsx","components/Footer.jsx","components/Header.jsx","components/Button.jsx","components/LyricsImporter.jsx","components/ImportedLyricsDisplay.jsx","components/Player.jsx","App.jsx","index.jsx"],"names":["props","audioInputValueChanged","setMedia","file","audioInput","current","files","url","URL","createObjectURL","name","type","selectAudioSource","click","React","createRef","className","onClick","this","accept","ref","onChange","hidden","Component","hotkeys","SPACE","H","J","K","renderHotkeys","hotkeyElements","hotkey","push","map","i","id","href","uk-toggle","uk-modal","uk-close","target","full","text","title","e","importFromTextfield","onImportLyrics","lyrics","state","length","rawLyrics","includes","replace","split","processedLyrics","forEach","lyric","arr","importFromFile","lyricInput","lyricInputValueChanged","reader","FileReader","onload","parseLyricsFromFile","readAsText","event","onImportPoints","lines","result","gap","filter","line","startsWith","parseInt","bpm","lyricLines","points","isLyric","isEndMarker","parts","pos","endPos","time","endTime","color","editable","labelText","nextLine","placeholder","style","resize","value","stopPropagation","setState","clear","height","maxHeight","overflowY","slice","AudioContext","window","webkitAudioContext","initializePeaks","media","instance","audio","setAttribute","load","playbackRate","audioContext","options","containers","overview","document","getElementById","zoomview","emitCueEvents","mediaElement","webAudio","scale","multiChannel","keyboard","showPlayheadTime","zoomLevels","Peaks","init","err","playbackSpeed","console","error","message","log","on","point","currentLyric","editLyric","querySelector","onchange","changeVolume","changePlaybackSpeed","addEventListeners","onkeydown","handleKeyDown","download","artist","fileData","fileName","blob","Blob","element","createElement","display","body","appendChild","removeChild","export","prompt","trim","getPoints","sort","a","b","timeToQuarterBeats","textContent","Math","floor","normalizedPos","max","normalizedLength","nextPointPos","normalizedNextPointPos","substr","join","code","toLowerCase","togglePaused","addLyric","addEndOfLyric","addEndOfVerse","clearLyrics","importedLyrics","resizeView","wasPaused","paused","player","getCurrentTime","pause","play","add","confirm","removeById","update","volume","parseFloat","playButtonText","zoomIn","zoom","zoomOut","views","getView","view","fitToContainer","addEventListener","resetLyrics","resetPoints","removeAll","toggleImportView","uk-grid","uk-spinner","data-action","defaultValue","min","step","App","setLyrics","callback","setPoints","showImportView","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7a175e33.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.audioInput = React.createRef();\n  }\n\n  audioInputValueChanged = () => {\n    const { setMedia } = this.props;\n    if (setMedia) {\n      const file = this.audioInput.current.files[0];\n      const url = URL.createObjectURL(file);\n      setMedia(file.name, file.type, url);\n    }\n  };\n\n  selectAudioSource = () => {\n    this.audioInput.current.click();\n  };\n\n  render() {\n    return (\n      <div>\n        <button\n          className=\"uk-button uk-button-default uk-button-small\"\n          onClick={this.selectAudioSource}\n        >\n          Select Audio Source\n        </button>\n        <input\n          type=\"file\"\n          accept=\"audio/*\"\n          ref={this.audioInput}\n          onChange={this.audioInputValueChanged}\n          hidden\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nconst hotkeys = {\n  SPACE: 'Play/Pause',\n  H: 'Add lyric at current time',\n  J: 'End lyric at current time',\n  K: 'End verse at current time',\n};\n\nexport default class extends Component {\n  renderHotkeys = () => {\n    const hotkeyElements = [];\n    for (let hotkey in hotkeys) {\n      hotkeyElements.push(\n        <span>\n          <strong>{hotkey}</strong> - {hotkeys[hotkey]}\n        </span>\n      );\n    }\n    return hotkeyElements.map((hotkey, i) => <li key={i}>{hotkey}</li>);\n  };\n\n  render() {\n    const { id = 'help-modal' } = this.props;\n\n    return (\n      <>\n        <a\n          className=\"uk-button uk-button-text\"\n          href={`#${id}`}\n          uk-toggle={`target: #${id}`}\n        >\n          Help\n        </a>\n        <div id={id} className=\"uk-flex-top\" uk-modal=\"true\">\n          <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\n            <button\n              className=\"uk-modal-close-default\"\n              type=\"button\"\n              uk-close=\"true\"\n            />\n            <h1 className=\"uk-heading-line uk-margin-top\">\n              <span>Hotkeys</span>\n            </h1>\n            <ul className=\"uk-list\">{this.renderHotkeys()}</ul>\n            <h1 className=\"uk-heading-line uk-margin-top\">\n              <span>Syntax</span>\n            </h1>\n            <ul className=\"uk-list\">\n              <li>\n                To specify syllables in a word, add a lyric per syllable,\n                specifying a <strong>- (hyphen)</strong> at the end of each\n                lyric\n              </li>\n            </ul>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport HelpModal from './HelpModal';\n\nexport default class extends Component {\n  render() {\n    return (\n      <div className=\"uk-margin-top\">\n        <HelpModal />\n        <a\n          className=\"uk-button uk-button-text uk-margin-left\"\n          href=\"https://github.com/ajchili/rs-cdlc-lyric-syncer\"\n          target=\"_blank\"\n        >\n          Github\n        </a>\n        <a\n          className=\"uk-button uk-button-text uk-margin-left\"\n          href=\"https://github.com/ajchili/rs-cdlc-lyric-syncer/issues/new\"\n          target=\"_blank\"\n        >\n          Report an Issue\n        </a>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class extends Component {\n  render() {\n    return (\n      <div className=\"uk-margin-top\">\n        <h1 className=\"uk-heading-line uk-text-center\">\n          <span>Better UltraStar Creator</span>\n        </h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class extends Component {\n  render() {\n    const {\n      full = false,\n      type = 'default',\n      onClick = () => {},\n      text,\n      title = null,\n    } = this.props;\n\n    return (\n      <button\n        className={`uk-button uk-button-${type} uk-button-small ${\n          full && 'uk-width-1-1'\n        }`}\n        onClick={(e) => {\n          if (onClick) {\n            onClick(e);\n          }\n        }}\n        title={title}\n      >\n        {text}\n      </button>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Button from './Button';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lyrics: '',\n    };\n    this.lyricInput = React.createRef();\n  }\n\n  importFromTextfield = () => {\n    const { onImportLyrics } = this.props;\n    const { lyrics } = this.state;\n    if (lyrics == null || lyrics.length === 0) {\n      return;\n    }\n    let rawLyrics = lyrics;\n    while (rawLyrics.includes('\\n')) {\n      rawLyrics = rawLyrics.replace('\\n', ' ');\n    }\n    rawLyrics = rawLyrics.split(' ');\n    const processedLyrics = [];\n    for (let lyric of rawLyrics) {\n      lyric.split('-').forEach((lyric, i, arr) => {\n        if (arr.length - 1 === i) {\n          processedLyrics.push(lyric);\n        } else {\n          processedLyrics.push(`${lyric}-`);\n        }\n      });\n    }\n    onImportLyrics(processedLyrics);\n  };\n\n  importFromFile = () => {\n    this.lyricInput.current.click();\n  };\n\n  lyricInputValueChanged = () => {\n    const file = this.lyricInput.current.files[0];\n    const reader = new FileReader();\n    reader.onload = this.parseLyricsFromFile;\n    reader.readAsText(file);\n  };\n\n  parseLyricsFromFile = (event) => {\n    const { onImportPoints } = this.props;\n    const text = event.target.result;\n    const lines = text.split('\\n');\n    let gap = (\n      lines.filter((line) => line.startsWith('#GAP'))[0] || '#GAP:0'\n    ).split(':')[1];\n    gap = parseInt(gap, 10) / 1000;\n    let bpm = (\n      lines.filter((line) => line.startsWith('#BPM'))[0] || '#BPM:100'\n    ).split(':')[1];\n    bpm = parseInt(bpm, 10);\n    const lyricLines = lines.filter(\n      (line) => !line.startsWith('#') && !line.startsWith('E')\n    );\n    const points = [];\n    for (let i = 0; i < lyricLines.length; i++) {\n      const line = lyricLines[i];\n      const isLyric = line.startsWith(':');\n      const isEndMarker = line.startsWith('-');\n      const parts = line.split(' ');\n      const pos = parseInt(parts[1], 10) / 1000;\n      const endPos = pos + parseInt(parts[2], 10) / 1000;\n      const time = (pos / bpm) * 15000 + gap;\n      const endTime = (endPos / bpm) * 15000 + gap;\n      if (isEndMarker) {\n        points.push({\n          color: '#FF0000',\n          editable: true,\n          labelText: '(end of verse)',\n          time,\n        });\n      } else if (isLyric) {\n        points.push({\n          color: '#666',\n          editable: true,\n          labelText: parts[parts.length - 1],\n          time,\n        });\n        if (i + 1 < lyricLines.length) {\n          const nextLine = lyricLines[i + 1];\n          const nextLinePos = parseInt(nextLine.split(' ')[1], 10) / 1000;\n          if (endPos !== nextLinePos) {\n            points.push({\n              color: '#0000FF',\n              editable: true,\n              labelText: '(end of lyric)',\n              time: endTime,\n            });\n          }\n        } else {\n          points.push({\n            color: '#FF0000',\n            editable: true,\n            labelText: '(end of verse)',\n            time: endTime,\n          });\n        }\n      }\n    }\n    onImportPoints(points);\n  };\n\n  render() {\n    const { lyrics } = this.state;\n\n    return (\n      <div className=\"uk-card uk-card-default uk-card-body\">\n        <div className=\"uk-flex uk-flex-column uk-height-1-1\">\n          <h3 className=\"uk-card-title\">Import Lyrics</h3>\n          <textarea\n            className=\"uk-textarea uk-flex-1\"\n            placeholder=\"Lyrics\"\n            style={{ resize: 'none' }}\n            value={lyrics}\n            onChange={(e) => {\n              e.stopPropagation();\n              this.setState({ lyrics: e.target.value });\n            }}\n          ></textarea>\n          <div className=\"uk-margin-top\">\n            <Button\n              full\n              text=\"Import From Textfield\"\n              onClick={this.importFromTextfield}\n            />\n            <Button\n              full\n              text=\"Import From File\"\n              onClick={this.importFromFile}\n            />\n            <input\n              type=\"file\"\n              accept=\"text/plain\"\n              ref={this.lyricInput}\n              onChange={this.lyricInputValueChanged}\n              hidden\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Button from './Button';\n\nexport default class extends Component {\n  render() {\n    const { clear = () => {}, lyrics } = this.props;\n\n    return (\n      <div className=\"uk-width-1-3 uk-grid-item-match\">\n        <div\n          className=\"uk-flex uk-flex-column uk-height-1-1\"\n          style={{ height: '35vh' }}\n        >\n          <h5 className=\"uk-heading-bullet\">\n            <span>\n              Next Lyric: <strong>{lyrics[0]}</strong>\n            </span>\n          </h5>\n          <div\n            className=\"uk-flex-1\"\n            style={{ maxHeight: '100%', overflowY: 'scroll' }}\n          >\n            <ul className=\"uk-list uk-list-striped\">\n              {lyrics.slice(1).map((lyric, i) => {\n                return <li key={i}>{lyric}</li>;\n              })}\n            </ul>\n          </div>\n          <div className=\"uk-margin-top\">\n            <Button full text=\"Clear\" onClick={clear} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Peaks from 'peaks.js';\nimport Button from './Button';\nimport ImportedLyricsDisplay from './ImportedLyricsDisplay';\n\n// Workaround for AudioContext.\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      importedLyrics: [],\n      instance: null,\n      currentLyric: null,\n      playButtonText: 'Play',\n      playbackSpeed: 1,\n    };\n    this.audio = React.createRef();\n    window.addEventListener('resize', this.resizeView);\n  }\n\n  componentDidMount() {\n    this.initializePeaks();\n    this.addEventListeners();\n  }\n\n  componentDidUpdate() {\n    const { lyrics = [], points = [], resetLyrics, resetPoints } = this.props;\n    if (points.length > 0) {\n      resetPoints(() => {\n        const { instance } = this.state;\n        instance.points.removeAll();\n        points.forEach((point) => instance.points.add(point));\n      });\n    } else if (lyrics.length > 0) {\n      resetLyrics(() => {\n        this.setState({ importedLyrics: lyrics }, this.resizeView);\n      });\n    }\n  }\n\n  initializePeaks = () => {\n    const { media } = this.props;\n    this.setState({ instance: null });\n    this.audio.current.setAttribute('src', media.url);\n    this.audio.current.setAttribute('type', media.type);\n    this.audio.current.load();\n    this.audio.current.playbackRate = 1;\n    const audioContext = new AudioContext();\n    const options = {\n      containers: {\n        overview: document.getElementById('overview-container'),\n        zoomview: document.getElementById('zoomview-container'),\n      },\n      emitCueEvents: true,\n      mediaElement: this.audio.current,\n      webAudio: {\n        audioContext: audioContext,\n        scale: 64,\n        multiChannel: true,\n      },\n      keyboard: true,\n      showPlayheadTime: true,\n      zoomLevels: [64, 128, 256, 512, 1024, 2048, 4096, 8192],\n    };\n    Peaks.init(options, (err, instance) => {\n      this.setState({ instance, playbackSpeed: 1 });\n      if (err) {\n        console.error(err.message);\n        return;\n      }\n\n      console.log('Peak instance initialized.');\n\n      instance.on('points.enter', (point) => {\n        const isLyric = point.color === '#666';\n        this.setState({ currentLyric: isLyric ? point.labelText : null });\n      });\n\n      instance.on('points.dblclick', this.editLyric);\n\n      document.querySelector('input[data-action=\"change-volume\"]').onchange =\n        this.changeVolume;\n\n      document.querySelector(\n        'input[data-action=\"change-playback-speed\"]'\n      ).onchange = this.changePlaybackSpeed;\n    });\n  };\n\n  addEventListeners = () => {\n    document.onkeydown = this.handleKeyDown;\n  };\n\n  download = (name, artist, fileData) => {\n    const fileName = `${artist} - ${name} lyrics.txt`;\n    const blob = new Blob([fileData], { type: 'data:text/plain;' });\n    const url = URL.createObjectURL(blob);\n    const element = document.createElement('a');\n    element.setAttribute('href', url);\n    element.setAttribute('download', fileName);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  };\n\n  export = () => {\n    const { media } = this.props;\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const title = prompt('Song title', media.title);\n    if (title === null || title.trim().length === 0) {\n      return;\n    }\n    const artist = prompt('Artist', '');\n    if (artist === null || artist.trim().length === 0) {\n      return;\n    }\n    let bpm = prompt('BPM', '100');\n    if (bpm === null || bpm.trim().length === 0) {\n      return;\n    }\n    bpm = parseInt(bpm, 10);\n    const points = instance.points.getPoints().sort((a, b) => a.time - b.time);\n    const gap = (points.length > 0 ? points[0].time : 0) * 1000;\n    const timeToQuarterBeats = bpm / 15000;\n    const textContent = [\n      `#TITLE:${title}`,\n      `#ARTIST:${artist}`,\n      `#BPM:${bpm}`,\n      `#GAP:${Math.floor(gap)}`,\n      ...points.map((point, i) => {\n        if (point.color === '#0000FF') {\n          return null;\n        }\n        const isEndMarker = point.color === '#FF0000';\n        const pos = point.time * 1000;\n        const normalizedPos = Math.floor((pos - gap) * timeToQuarterBeats);\n        if (isEndMarker) {\n          if (i > 0) {\n            return `- ${Math.max(normalizedPos + 1, normalizedPos)}`;\n          } else {\n            return `- ${normalizedPos}`;\n          }\n        }\n        let normalizedLength = 1;\n        if (i + 1 < points.length) {\n          const nextPoint = points[i + 1];\n          const nextPointPos = nextPoint.time * 1000;\n          const normalizedNextPointPos = Math.floor(\n            (nextPointPos - gap) * timeToQuarterBeats\n          );\n          normalizedLength = Math.max(\n            1,\n            normalizedNextPointPos - normalizedPos\n          );\n        }\n        let lyric = point.labelText;\n        if (lyric.slice(-1) === '-') {\n          lyric = lyric.substr(0, lyric.length - 1);\n        }\n        if (\n          // Is not the start of a verse\n          (i > 0 && points[i - 1].color === '#FF0000') ||\n          // Previous lyric is not a syllable\n          (i > 0 && points[i - 1].labelText.slice(-1) !== '-')\n        ) {\n          return `: ${normalizedPos} ${normalizedLength} 0  ${lyric}`;\n        }\n        return `: ${normalizedPos} ${normalizedLength} 0 ${lyric}`;\n      }),\n      'E',\n    ].filter((line) => line !== null);\n    this.download(title, artist, textContent.join('\\n'));\n  };\n\n  handleKeyDown = (e) => {\n    switch (e.code.toLowerCase()) {\n      // Play/Pause on space pressed\n      case 'space':\n        this.togglePaused();\n        break;\n      case 'keyh':\n        this.addLyric();\n        break;\n      case 'keyj':\n        this.addEndOfLyric();\n        break;\n      case 'keyk':\n        this.addEndOfVerse();\n        break;\n      default:\n        console.log(e);\n        break;\n    }\n  };\n\n  clearLyrics = () => {\n    this.setState({ importedLyrics: [] }, this.resizeView);\n  };\n\n  addLyric = () => {\n    const { importedLyrics, instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const wasPaused = this.audio.current.paused;\n    const time = instance.player.getCurrentTime();\n    let lyric = '';\n    if (importedLyrics.length > 0) {\n      lyric = importedLyrics[0];\n      this.setState(\n        { importedLyrics: importedLyrics.slice(1) },\n        this.resizeView\n      );\n    } else {\n      instance.player.pause();\n      lyric = prompt('Please provide a lyric', '');\n      if (lyric === null || lyric.trim().length === 0) {\n        if (!wasPaused) instance.player.play();\n        return;\n      }\n    }\n    instance.points.add({\n      time,\n      labelText: lyric,\n      editable: true,\n      color: '#666',\n    });\n    if (!wasPaused) instance.player.play();\n  };\n\n  editLyric = (point) => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const isEndMarker = point.color !== '#666';\n    if (isEndMarker) {\n      if (window.confirm('Do you want to delete this end marker?')) {\n        instance.points.removeById(point.id);\n      }\n      return;\n    }\n    const lyric = prompt(\n      'Update lyric, leave blank to remove',\n      point.labelText\n    );\n    if (lyric === null || lyric.trim().length === 0) {\n      instance.points.removeById(point.id);\n      return;\n    }\n    point.update({\n      labelText: lyric,\n    });\n  };\n\n  addEndOfLyric = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const wasPaused = this.audio.current.paused;\n    instance.player.pause();\n    instance.points.add({\n      time: instance.player.getCurrentTime(),\n      labelText: '(end of lyric)',\n      editable: true,\n      color: '#0000FF',\n    });\n    if (!wasPaused) instance.player.play();\n  };\n\n  addEndOfVerse = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const wasPaused = this.audio.current.paused;\n    instance.player.pause();\n    instance.points.add({\n      time: instance.player.getCurrentTime(),\n      labelText: '(end of verse)',\n      editable: true,\n      color: '#FF0000',\n    });\n    if (!wasPaused) instance.player.play();\n  };\n\n  changeVolume = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const volume =\n      parseFloat(\n        document.querySelector('input[data-action=\"change-volume\"]').value\n      ) || 0;\n    this.audio.current.volume = volume;\n  };\n\n  changePlaybackSpeed = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const playbackSpeed =\n      parseFloat(\n        document.querySelector('input[data-action=\"change-playback-speed\"]')\n          .value\n      ) || 1;\n    this.audio.current.playbackRate = playbackSpeed;\n    this.setState({ playbackSpeed });\n  };\n\n  togglePaused = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const wasPaused = this.audio.current.paused;\n    this.setState({\n      currentLyric: null,\n      playButtonText: wasPaused ? 'Pause' : 'Play',\n    });\n    if (wasPaused) {\n      instance.player.play();\n    } else {\n      instance.player.pause();\n    }\n  };\n\n  zoomIn = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    instance.zoom.zoomIn();\n  };\n\n  zoomOut = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    instance.zoom.zoomOut();\n  };\n\n  resizeView = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    [\n      instance.views.getView('zoomview'),\n      instance.views.getView('overview'),\n    ].forEach((view) => view.fitToContainer());\n  };\n\n  render() {\n    const { media, toggleImportView } = this.props;\n    const {\n      importedLyrics,\n      instance,\n      currentLyric,\n      playButtonText,\n      playbackSpeed,\n    } = this.state;\n\n    return (\n      <div className=\"uk-card uk-card-default uk-card-body\">\n        <h3 className=\"uk-card-title\">{media.title}</h3>\n        <h4 className=\"uk-heading-bullet\">\n          <span>{currentLyric}</span>\n        </h4>\n        <div uk-grid=\"true\">\n          <div id=\"peaks-container\" className=\"uk-width-expand\">\n            <div id=\"zoomview-container\" style={{ height: '20vh' }}></div>\n            <div id=\"overview-container\" style={{ height: '15vh' }}></div>\n          </div>\n          {importedLyrics.length > 0 && (\n            <ImportedLyricsDisplay\n              clear={this.clearLyrics}\n              lyrics={importedLyrics}\n            />\n          )}\n        </div>\n        {instance === null ? (\n          <dl className=\"uk-description-list\">\n            <dt>Processing song data...</dt>\n            <dd>Please wait as \"{media.title}\" is processed...</dd>\n            <br />\n            <div uk-spinner=\"ratio: 1\"></div>\n          </dl>\n        ) : (\n          <>\n            <div className=\"uk-form-stacked\">\n              <div\n                uk-grid=\"true\"\n                className=\"uk-margin-top uk-child-width-expand\"\n              >\n                <div>\n                  <label className=\"uk-form-label\">Controls</label>\n                  <div className=\"uk-button-group\">\n                    <Button\n                      onClick={this.togglePaused}\n                      text={playButtonText}\n                      title=\"(SPACE)\"\n                    />\n                    <Button onClick={this.zoomIn} text=\"Zoom in\" />\n                    <Button onClick={this.zoomOut} text=\"Zoom out\" />\n                  </div>\n                </div>\n                <div>\n                  <label className=\"uk-form-label\">\n                    Playback Speed ({playbackSpeed}x)\n                  </label>\n                  <div className=\"uk-form-controls\">\n                    <input\n                      className=\"uk-range\"\n                      data-action=\"change-playback-speed\"\n                      type=\"range\"\n                      defaultValue=\"1\"\n                      min=\"0.25\"\n                      max=\"1\"\n                      step=\"0.01\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <label className=\"uk-form-label\">Volume</label>\n                  <div className=\"uk-form-controls\">\n                    <input\n                      className=\"uk-range\"\n                      data-action=\"change-volume\"\n                      type=\"range\"\n                      defaultValue=\"1\"\n                      min=\"0\"\n                      max=\"1\"\n                      step=\"0.01\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"uk-margin-top\">\n                <label className=\"uk-form-label\">Lyric Options</label>\n                <div className=\"uk-button-group\">\n                  <Button\n                    onClick={() => toggleImportView(this.resizeView)}\n                    text=\"Import\"\n                    type=\"secondary\"\n                  />\n                  <Button onClick={this.export} text=\"Save\" type=\"primary\" />\n                  <Button\n                    onClick={this.addLyric}\n                    text=\"Add lyric at current time\"\n                    title=\"(H)\"\n                  />\n                  <Button\n                    onClick={this.addEndOfLyric}\n                    text=\"End lyric at current time\"\n                    title=\"(J)\"\n                  />\n                  <Button\n                    onClick={this.addEndOfVerse}\n                    text=\"End verse at current time\"\n                    title=\"(K)\"\n                  />\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n        <audio ref={this.audio} hidden></audio>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport AudioSourceSelector from './components/AudioSourceSelector';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport LyricsImporter from './components/LyricsImporter';\nimport Player from './components/Player';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lyrics: [],\n      media: null,\n      points: [],\n      showImportView: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ media: null });\n  }\n\n  setMedia = (title, type, url) => {\n    this.setState({ media: null }, () => {\n      this.setState({ media: { title, type, url } });\n    });\n  };\n\n  setLyrics = (lyrics, callback) => {\n    this.setState({ lyrics }, callback);\n  };\n\n  setPoints = (points, callback) => {\n    this.setState({ points }, callback);\n  };\n\n  toggleImportView = (callback) => {\n    const { showImportView } = this.state;\n    this.setState({ showImportView: !showImportView }, callback);\n  };\n\n  render() {\n    const { lyrics, media, points, showImportView } = this.state;\n\n    return (\n      <div className=\"uk-container\">\n        <Header />\n        <AudioSourceSelector setMedia={this.setMedia} />\n        <div uk-grid=\"true\" className=\"uk-margin-top\">\n          <div className=\"uk-width-expand\">\n            {media !== null && (\n              <Player\n                lyrics={lyrics}\n                media={media}\n                points={points}\n                toggleImportView={this.toggleImportView}\n                resetLyrics={(callback) =>\n                  this.setLyrics([], this.toggleImportView(callback))\n                }\n                resetPoints={(callback) =>\n                  this.setPoints([], this.toggleImportView(callback))\n                }\n              />\n            )}\n          </div>\n          {showImportView && (\n            <div className=\"uk-width-1-3 uk-grid-item-match\">\n              <LyricsImporter\n                onImportLyrics={this.setLyrics}\n                onImportPoints={this.setPoints}\n              />\n            </div>\n          )}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}