{"version":3,"sources":["components/AudioSourceSelector.jsx","components/HelpModal.jsx","components/Footer.jsx","components/Header.jsx","components/Button.jsx","components/LyricsImporter.jsx","components/ImportedLyricsDisplay.jsx","components/Player.jsx","App.jsx","index.jsx"],"names":["props","audioInputValueChanged","setMedia","file","audioInput","current","files","url","URL","createObjectURL","name","type","selectAudioSource","click","React","createRef","className","onClick","this","accept","ref","onChange","hidden","Component","hotkeys","SPACE","H","J","K","renderHotkeys","hotkeyElements","hotkey","push","map","i","id","href","uk-toggle","uk-modal","uk-close","target","full","text","title","e","importFromTextfield","onImport","lyrics","state","length","rawLyrics","includes","replace","split","processedLyrics","forEach","lyric","arr","importFromFile","placeholder","style","resize","value","stopPropagation","setState","clear","height","maxHeight","overflowY","slice","AudioContext","window","webkitAudioContext","initializePeaks","media","instance","audio","setAttribute","load","audioContext","options","containers","overview","document","getElementById","zoomview","emitCueEvents","mediaElement","webAudio","scale","multiChannel","keyboard","showPlayheadTime","zoomLevels","Peaks","init","err","console","error","message","log","on","point","isLyric","color","currentLyric","labelText","editLyric","querySelector","onchange","changeVolume","addEventListeners","onkeydown","handleKeyDown","download","artist","fileData","fileName","blob","Blob","element","createElement","display","body","appendChild","removeChild","export","prompt","trim","bpm","parseInt","points","getPoints","sort","a","b","time","gap","timeToQuarterBeats","textContent","Math","floor","isEndMarker","pos","normalizedPos","max","normalizedLength","nextPointPos","normalizedNextPointPos","substr","filter","line","join","code","toLowerCase","togglePaused","addLyric","addEndOfLyric","addEndOfVerse","clearLyrics","importedLyrics","resizeView","wasPaused","paused","player","getCurrentTime","pause","play","add","editable","confirm","removeById","update","volume","parseFloat","playButtonText","zoomIn","zoom","zoomOut","views","getView","view","fitToContainer","addEventListener","resetLyrics","toggleImportView","uk-grid","uk-spinner","data-action","defaultValue","min","step","App","setLyrics","callback","showImportView","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.12f0bfb4.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.audioInput = React.createRef();\n  }\n\n  audioInputValueChanged = () => {\n    const { setMedia } = this.props;\n    if (setMedia) {\n      const file = this.audioInput.current.files[0];\n      const url = URL.createObjectURL(file);\n      setMedia(file.name, file.type, url);\n    }\n  };\n\n  selectAudioSource = () => {\n    this.audioInput.current.click();\n  };\n\n  render() {\n    return (\n      <div>\n        <button\n          className=\"uk-button uk-button-default uk-button-small\"\n          onClick={this.selectAudioSource}\n        >\n          Select Audio Source\n        </button>\n        <input\n          type=\"file\"\n          accept=\"audio/*\"\n          ref={this.audioInput}\n          onChange={this.audioInputValueChanged}\n          hidden\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nconst hotkeys = {\n  SPACE: 'Play/Pause',\n  H: 'Add lyric at current time',\n  J: 'End lyric at current time',\n  K: 'End verse at current time',\n};\n\nexport default class extends Component {\n  renderHotkeys = () => {\n    const hotkeyElements = [];\n    for (let hotkey in hotkeys) {\n      hotkeyElements.push(\n        <span>\n          <strong>{hotkey}</strong> - {hotkeys[hotkey]}\n        </span>\n      );\n    }\n    return hotkeyElements.map((hotkey, i) => <li key={i}>{hotkey}</li>);\n  };\n\n  render() {\n    const { id = 'help-modal' } = this.props;\n\n    return (\n      <>\n        <a\n          className=\"uk-button uk-button-text\"\n          href={`#${id}`}\n          uk-toggle={`target: #${id}`}\n        >\n          Help\n        </a>\n        <div id={id} className=\"uk-flex-top\" uk-modal=\"true\">\n          <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\n            <button\n              className=\"uk-modal-close-default\"\n              type=\"button\"\n              uk-close=\"true\"\n            />\n            <h1 className=\"uk-heading-line uk-margin-top\">\n              <span>Hotkeys</span>\n            </h1>\n            <ul className=\"uk-list\">{this.renderHotkeys()}</ul>\n            <h1 className=\"uk-heading-line uk-margin-top\">\n              <span>Syntax</span>\n            </h1>\n            <ul className=\"uk-list\">\n              <li>\n                To specify syllables in a word, add a lyric per syllable,\n                specifying a <strong>- (hyphen)</strong> at the end of each\n                lyric\n              </li>\n            </ul>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport HelpModal from './HelpModal';\n\nexport default class extends Component {\n  render() {\n    return (\n      <div className=\"uk-margin-top\">\n        <HelpModal />\n        <a\n          className=\"uk-button uk-button-text uk-margin-left\"\n          href=\"https://github.com/ajchili/rs-cdlc-lyric-syncer\"\n          target=\"_blank\"\n        >\n          Github\n        </a>\n        <a\n          className=\"uk-button uk-button-text uk-margin-left\"\n          href=\"https://github.com/ajchili/rs-cdlc-lyric-syncer/issues/new\"\n          target=\"_blank\"\n        >\n          Report an Issue\n        </a>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class extends Component {\n  render() {\n    return (\n      <div className=\"uk-margin-top\">\n        <h1 className=\"uk-heading-line uk-text-center\">\n          <span>Better UltraStar Creator</span>\n        </h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class extends Component {\n  render() {\n    const {\n      full = false,\n      type = 'default',\n      onClick = () => {},\n      text,\n      title = null,\n    } = this.props;\n\n    return (\n      <button\n        className={`uk-button uk-button-${type} uk-button-small ${\n          full && 'uk-width-1-1'\n        }`}\n        onClick={(e) => {\n          if (onClick) {\n            onClick(e);\n          }\n        }}\n        title={title}\n      >\n        {text}\n      </button>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Button from './Button';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lyrics: '',\n    };\n  }\n\n  importFromTextfield = () => {\n    const { onImport } = this.props;\n    const { lyrics } = this.state;\n    if (lyrics == null || lyrics.length === 0) {\n      return;\n    }\n    let rawLyrics = lyrics;\n    while (rawLyrics.includes('\\n')) {\n      rawLyrics = rawLyrics.replace('\\n', ' ');\n    }\n    rawLyrics = rawLyrics.split(' ');\n    const processedLyrics = [];\n    for (let lyric of rawLyrics) {\n      lyric.split('-').forEach((lyric, i, arr) => {\n        if (arr.length - 1 === i) {\n          processedLyrics.push(lyric);\n        } else {\n          processedLyrics.push(`${lyric}-`);\n        }\n      });\n    }\n    onImport(processedLyrics);\n  };\n\n  importFromFile = () => {};\n\n  render() {\n    const { lyrics } = this.state;\n\n    return (\n      <div className=\"uk-card uk-card-default uk-card-body\">\n        <div className=\"uk-flex uk-flex-column uk-height-1-1\">\n          <h3 className=\"uk-card-title\">Import Lyrics</h3>\n          <textarea\n            className=\"uk-textarea uk-flex-1\"\n            placeholder=\"Lyrics\"\n            style={{ resize: 'none' }}\n            value={lyrics}\n            onChange={(e) => {\n              e.stopPropagation();\n              this.setState({ lyrics: e.target.value });\n            }}\n          ></textarea>\n          <div className=\"uk-margin-top\">\n            <Button\n              full\n              text=\"Import From Textfield\"\n              onClick={this.importFromTextfield}\n            />\n            {/* <Button full text=\"Import From File\" /> */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Button from './Button';\n\nexport default class extends Component {\n  render() {\n    const { clear = () => {}, lyrics } = this.props;\n\n    return (\n      <div className=\"uk-width-1-3 uk-grid-item-match\">\n        <div\n          className=\"uk-flex uk-flex-column uk-height-1-1\"\n          style={{ height: '35vh' }}\n        >\n          <h5 className=\"uk-heading-bullet\">\n            <span>\n              Next Lyric: <strong>{lyrics[0]}</strong>\n            </span>\n          </h5>\n          <div\n            className=\"uk-flex-1\"\n            style={{ maxHeight: '100%', overflowY: 'scroll' }}\n          >\n            <ul className=\"uk-list uk-list-striped\">\n              {lyrics.slice(1).map((lyric, i) => {\n                return <li key={i}>{lyric}</li>;\n              })}\n            </ul>\n          </div>\n          <div className=\"uk-margin-top\">\n            <Button full text=\"Clear\" onClick={clear} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Peaks from 'peaks.js';\nimport Button from './Button';\nimport ImportedLyricsDisplay from './ImportedLyricsDisplay';\n\n// Workaround for AudioContext.\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      importedLyrics: [],\n      instance: null,\n      currentLyric: null,\n      playButtonText: 'Play',\n    };\n    this.audio = React.createRef();\n    window.addEventListener('resize', this.resizeView);\n  }\n\n  componentDidMount() {\n    this.initializePeaks();\n    this.addEventListeners();\n  }\n\n  componentDidUpdate() {\n    const { lyrics, resetLyrics } = this.props;\n    if (lyrics.length > 0) {\n      resetLyrics(() => {\n        this.setState({ importedLyrics: lyrics }, this.resizeView);\n      });\n    }\n  }\n\n  initializePeaks = () => {\n    const { media } = this.props;\n    this.setState({ instance: null });\n    this.audio.current.setAttribute('src', media.url);\n    this.audio.current.setAttribute('type', media.type);\n    this.audio.current.load();\n    const audioContext = new AudioContext();\n    const options = {\n      containers: {\n        overview: document.getElementById('overview-container'),\n        zoomview: document.getElementById('zoomview-container'),\n      },\n      emitCueEvents: true,\n      mediaElement: this.audio.current,\n      webAudio: {\n        audioContext: audioContext,\n        scale: 64,\n        multiChannel: true,\n      },\n      keyboard: true,\n      showPlayheadTime: true,\n      zoomLevels: [64, 128, 256, 512, 1024, 2048, 4096, 8192],\n    };\n    Peaks.init(options, (err, instance) => {\n      this.setState({ instance });\n      if (err) {\n        console.error(err.message);\n        return;\n      }\n\n      console.log('Peak instance initialized.');\n\n      instance.on('points.enter', (point) => {\n        const isLyric = point.color === '#666';\n        this.setState({ currentLyric: isLyric ? point.labelText : null });\n      });\n\n      instance.on('points.dblclick', this.editLyric);\n\n      document.querySelector(\n        'input[data-action=\"change-volume\"]'\n      ).onchange = this.changeVolume;\n    });\n  };\n\n  addEventListeners = () => {\n    document.onkeydown = this.handleKeyDown;\n  };\n\n  download = (name, artist, fileData) => {\n    const fileName = `${artist} - ${name} lyrics.txt`;\n    const blob = new Blob([fileData], { type: 'data:text/plain;' });\n    const url = URL.createObjectURL(blob);\n    const element = document.createElement('a');\n    element.setAttribute('href', url);\n    element.setAttribute('download', fileName);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  };\n\n  export = () => {\n    const { media } = this.props;\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const title = prompt('Song title', media.title);\n    if (title === null || title.trim().length === 0) {\n      return;\n    }\n    const artist = prompt('Artist', '');\n    if (artist === null || artist.trim().length === 0) {\n      return;\n    }\n    let bpm = prompt('BPM', '100');\n    if (bpm === null || bpm.trim().length === 0) {\n      return;\n    }\n    bpm = parseInt(bpm, 10);\n    const points = instance.points.getPoints().sort((a, b) => a.time - b.time);\n    const gap = (points.length > 0 ? points[0].time : 0) * 1000;\n    const timeToQuarterBeats = bpm / 15000;\n    const textContent = [\n      `#TITLE:${title}`,\n      `#ARTIST:${artist}`,\n      `#BPM:${bpm}`,\n      `#GAP:${Math.floor(gap)}`,\n      ...points.map((point, i) => {\n        if (point.color === '#0000FF') {\n          return null;\n        }\n        const isEndMarker = point.color === '#FF0000';\n        const pos = point.time * 1000;\n        const normalizedPos = Math.floor((pos - gap) * timeToQuarterBeats);\n        if (isEndMarker) {\n          if (i > 0) {\n            return `- ${Math.max(normalizedPos + 1, normalizedPos)}`;\n          } else {\n            return `- ${normalizedPos}`;\n          }\n        }\n        let normalizedLength = 1;\n        if (i + 1 < points.length) {\n          const nextPoint = points[i + 1];\n          const nextPointPos = nextPoint.time * 1000;\n          const normalizedNextPointPos = Math.floor(\n            (nextPointPos - gap) * timeToQuarterBeats\n          );\n          normalizedLength = Math.max(\n            1,\n            normalizedNextPointPos - normalizedPos\n          );\n        }\n        let lyric = point.labelText;\n        if (lyric.slice(-1) === '-') {\n          lyric = lyric.substr(0, lyric.length - 1);\n        }\n        if (\n          // Is not the start of a verse\n          (i > 0 && points[i - 1].color === '#FF0000') ||\n          // Previous lyric is not a syllable\n          (i > 0 && points[i - 1].labelText.slice(-1) !== '-')\n        ) {\n          return `: ${normalizedPos} ${normalizedLength} 0  ${lyric}`;\n        }\n        return `: ${normalizedPos} ${normalizedLength} 0 ${lyric}`;\n      }),\n      'E',\n    ].filter((line) => line !== null);\n    this.download(title, artist, textContent.join('\\n'));\n  };\n\n  handleKeyDown = (e) => {\n    switch (e.code.toLowerCase()) {\n      // Play/Pause on space pressed\n      case 'space':\n        this.togglePaused();\n        break;\n      case 'keyh':\n        this.addLyric();\n        break;\n      case 'keyj':\n        this.addEndOfLyric();\n        break;\n      case 'keyk':\n        this.addEndOfVerse();\n        break;\n      default:\n        console.log(e);\n        break;\n    }\n  };\n\n  clearLyrics = () => {\n    this.setState({ importedLyrics: [] }, this.resizeView);\n  };\n\n  addLyric = () => {\n    const { importedLyrics, instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const wasPaused = this.audio.current.paused;\n    const time = instance.player.getCurrentTime();\n    let lyric = '';\n    if (importedLyrics.length > 0) {\n      lyric = importedLyrics[0];\n      this.setState(\n        { importedLyrics: importedLyrics.slice(1) },\n        this.resizeView\n      );\n    } else {\n      instance.player.pause();\n      lyric = prompt('Please provide a lyric', '');\n      if (lyric === null || lyric.trim().length === 0) {\n        if (!wasPaused) instance.player.play();\n        return;\n      }\n    }\n    instance.points.add({\n      time,\n      labelText: lyric,\n      editable: true,\n      color: '#666',\n    });\n    if (!wasPaused) instance.player.play();\n  };\n\n  editLyric = (point) => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const isEndMarker = point.color !== '#666';\n    if (isEndMarker) {\n      if (window.confirm('Do you want to delete this end marker?')) {\n        instance.points.removeById(point.id);\n      }\n      return;\n    }\n    const lyric = prompt(\n      'Update lyric, leave blank to remove',\n      point.labelText\n    );\n    if (lyric === null || lyric.trim().length === 0) {\n      instance.points.removeById(point.id);\n      return;\n    }\n    point.update({\n      labelText: lyric,\n    });\n  };\n\n  addEndOfLyric = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const wasPaused = this.audio.current.paused;\n    instance.player.pause();\n    instance.points.add({\n      time: instance.player.getCurrentTime(),\n      labelText: '(end of lyric)',\n      editable: true,\n      color: '#0000FF',\n    });\n    if (!wasPaused) instance.player.play();\n  };\n\n  addEndOfVerse = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const wasPaused = this.audio.current.paused;\n    instance.player.pause();\n    instance.points.add({\n      time: instance.player.getCurrentTime(),\n      labelText: '(end of verse)',\n      editable: true,\n      color: '#FF0000',\n    });\n    if (!wasPaused) instance.player.play();\n  };\n\n  changeVolume = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const volume =\n      parseFloat(\n        document.querySelector('input[data-action=\"change-volume\"]').value\n      ) || 0;\n    this.audio.current.volume = volume;\n  };\n\n  togglePaused = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    const wasPaused = this.audio.current.paused;\n    this.setState({\n      currentLyric: null,\n      playButtonText: wasPaused ? 'Pause' : 'Play',\n    });\n    if (wasPaused) {\n      instance.player.play();\n    } else {\n      instance.player.pause();\n    }\n  };\n\n  zoomIn = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    instance.zoom.zoomIn();\n  };\n\n  zoomOut = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    instance.zoom.zoomOut();\n  };\n\n  resizeView = () => {\n    const { instance } = this.state;\n    if (instance === null) {\n      return;\n    }\n    [\n      instance.views.getView('zoomview'),\n      instance.views.getView('overview'),\n    ].forEach((view) => view.fitToContainer());\n  };\n\n  render() {\n    const { media, toggleImportView } = this.props;\n    const {\n      importedLyrics,\n      instance,\n      currentLyric,\n      playButtonText,\n    } = this.state;\n\n    return (\n      <div className=\"uk-card uk-card-default uk-card-body\">\n        <h3 className=\"uk-card-title\">{media.title}</h3>\n        <h4 className=\"uk-heading-bullet\">\n          <span>{currentLyric}</span>\n        </h4>\n        <div uk-grid=\"true\">\n          <div id=\"peaks-container\" className=\"uk-width-expand\">\n            <div id=\"zoomview-container\" style={{ height: '20vh' }}></div>\n            <div id=\"overview-container\" style={{ height: '15vh' }}></div>\n          </div>\n          {importedLyrics.length > 0 && (\n            <ImportedLyricsDisplay\n              clear={this.clearLyrics}\n              lyrics={importedLyrics}\n            />\n          )}\n        </div>\n        {instance === null ? (\n          <dl className=\"uk-description-list\">\n            <dt>Processing song data...</dt>\n            <dd>Please wait as \"{media.title}\" is processed...</dd>\n            <br />\n            <div uk-spinner=\"ratio: 1\"></div>\n          </dl>\n        ) : (\n          <>\n            <div className=\"uk-form-stacked\">\n              <div\n                uk-grid=\"true\"\n                className=\"uk-margin-top uk-child-width-expand\"\n              >\n                <div>\n                  <label className=\"uk-form-label\">Controls</label>\n                  <div className=\"uk-button-group\">\n                    <Button\n                      onClick={this.togglePaused}\n                      text={playButtonText}\n                      title=\"(SPACE)\"\n                    />\n                    <Button onClick={this.zoomIn} text=\"Zoom in\" />\n                    <Button onClick={this.zoomOut} text=\"Zoom out\" />\n                  </div>\n                </div>\n                {/* <div>\n                  <label className=\"uk-form-label\">\n                    Playback Speed (0.25x - 1x)\n                  </label>\n                  <div className=\"uk-form-controls\">\n                    <input\n                      className=\"uk-range\"\n                      data-action=\"change-playback-speed\"\n                      type=\"range\"\n                      defaultValue=\"1\"\n                      min=\"0.25\"\n                      max=\"1\"\n                      step=\"0.01\"\n                    />\n                  </div>\n                </div> */}\n                <div>\n                  <label className=\"uk-form-label\">Volume</label>\n                  <div className=\"uk-form-controls\">\n                    <input\n                      className=\"uk-range\"\n                      data-action=\"change-volume\"\n                      type=\"range\"\n                      defaultValue=\"1\"\n                      min=\"0\"\n                      max=\"1\"\n                      step=\"0.01\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"uk-margin-top\">\n                <label className=\"uk-form-label\">Lyric Options</label>\n                <div className=\"uk-button-group\">\n                  <Button\n                    onClick={() => toggleImportView(this.resizeView)}\n                    text=\"Import\"\n                    type=\"secondary\"\n                  />\n                  <Button onClick={this.export} text=\"Export\" type=\"primary\" />\n                  <Button\n                    onClick={this.addLyric}\n                    text=\"Add lyric at current time\"\n                    title=\"(H)\"\n                  />\n                  <Button\n                    onClick={this.addEndOfLyric}\n                    text=\"End lyric at current time\"\n                    title=\"(J)\"\n                  />\n                  <Button\n                    onClick={this.addEndOfVerse}\n                    text=\"End verse at current time\"\n                    title=\"(K)\"\n                  />\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n        <audio ref={this.audio} hidden></audio>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport AudioSourceSelector from './components/AudioSourceSelector';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport LyricsImporter from './components/LyricsImporter';\nimport Player from './components/Player';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lyrics: [],\n      media: null,\n      showImportView: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ media: null });\n  }\n\n  setMedia = (title, type, url) => {\n    this.setState({ media: null }, () => {\n      this.setState({ media: { title, type, url } });\n    });\n  };\n\n  setLyrics = (lyrics, callback) => {\n    this.setState({ lyrics }, callback);\n  };\n\n  toggleImportView = (callback) => {\n    const { showImportView } = this.state;\n    this.setState({ showImportView: !showImportView }, callback);\n  };\n\n  render() {\n    const { lyrics, media, showImportView } = this.state;\n\n    return (\n      <div className=\"uk-container\">\n        <Header />\n        <AudioSourceSelector setMedia={this.setMedia} />\n        <div uk-grid=\"true\" className=\"uk-margin-top\">\n          <div className=\"uk-width-expand\">\n            {media !== null && (\n              <Player\n                lyrics={lyrics}\n                media={media}\n                toggleImportView={this.toggleImportView}\n                resetLyrics={(callback) =>\n                  this.setLyrics([], this.toggleImportView(callback))\n                }\n              />\n            )}\n          </div>\n          {showImportView && (\n            <div className=\"uk-width-1-3 uk-grid-item-match\">\n              <LyricsImporter onImport={this.setLyrics} />\n            </div>\n          )}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}